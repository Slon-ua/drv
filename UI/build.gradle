//plugins {
//    id 'java'
//    id 'io.qameta.allure' version '2.8.1'
//}
//
//group 'com.driveroo'
//version '1.0-SNAPSHOT'
//
//repositories {
//    mavenCentral()
//}

//sourceCompatibility = '8'
//targetCompatibility = '8'

//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}

ext {
    allureVersion = '2.14.0'
    junitVersion = '5.7.1'
    selenideVersion = '5.23.0'
    restAssuredVersion ='4.4.0'
    jacksonVersion = '2.13.0'
    slf4jVersion = '1.7.30'
    logbackVersion = '1.2.3'
}


dependencies {


    compile project(":API")
//    compile project(":Appium")

    implementation('com.codeborne:selenide:5.23.0')
    implementation("io.qameta.allure:allure-selenide:${allureVersion}")
    testImplementation('org.assertj:assertj-core:3.20.2')
    testImplementation('org.hamcrest:hamcrest:2.2')
    testImplementation('org.slf4j:slf4j-simple:1.7.30')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    implementation ("io.rest-assured:rest-assured:${restAssuredVersion}")

    implementation 'org.aeonbits.owner:owner:1.0.12'

}

test {
    useJUnitPlatform()


    systemProperties System.getProperties()   //проброс комант, присвоение переменных из консоли в Gradle

    testLogging {
        showStandardStreams = true //для отражения ответа RestAssured  https://blog.mrhaki.com/
        events "PASSED", "FAILED", "SKIPPED"
        exceptionFormat = 'full'  //более полный лог об ошибке
    }

    test.outputs.upToDateWhen {false} //строчка отвечает за то, что код будет запускатся всегда, даже при успешном прохождении. Тут же настраивается частота проведения тестов

}

allure {
    autoconfigure = true
    version = "${allureVersion}"
    aspectjweaver = true
    configuration = 'compile'  // указывает чтоб аллюр отрабатывал на уровне всего проекта

    useJUnit5 {
        version = "${allureVersion}"
    }
}